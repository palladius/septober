#!/usr/bin/env ruby -wKU

=begin
  ############################################################
	# $Id: script.rb 5582 2011-01-18 15:18:36Z rcarlesso $
  ##########################################################
  @author:    Riccardo Carlesso
  @email:     riccardo.carlesso@heanet.ie
  @maturity:  development
  @language:  Ruby
  @synopsis:  Brief Description here
	@tags:      development, rcarlesso
  @description:
   septober.heroku.com client to add and list todos!
 ############################################################
=end

  require 'optparse'       
  require 'rubygems'
  require 'ric'
  require 'active_resource'
  $PROG_VER = '0.1'
  $DEBUG    = true
  $TEMPLATE_VER = '1.5.1'
  
  $myconf = {
    :app_name            => 'septober client',
    :foo_arr             => %w{ bar baz },
    :hello               => 'Welcome to this terrific application',
    :septober_url        => 'http://septober.heroku.com/' , 
    :dflt_config         => './.septober.yml' , 
  }

  def usage(comment=nil)
    puts "#{$0} v.#{$PROG_VER}"
    puts "Usage2: #{File.basename $0} [-dhjv] [-l LOGFILE] <FOO> <BAR>"
    puts $opts
    pred comment if comment
    exit 11
  end

  class RemoteTodo < ActiveResource::Base
    self.site = "http://localhost:3000/"
    #self.site = "http://septober.heroku.com/"
    self.element_name = 'todo'
    self.user         = 'guest'
    self.password     = 'guest'
  end


  def real_program
    #$DEBUG = true
    debug_on 'Just created script, presuming u need some debug. TODO REMOVE ME when everything works!' #if $DEBUG
      # Maybe you may want to check on ARGV
    # unless ARGV.size == 2
    #   usage "Give me 2 arguments!" 
    # end
    deb("Hello world from a templated '#{yellow $0 }'")
    deb "+ Options are:  #{gray $opts}"
    deb "+ Depured args: #{azure ARGV}"
    deb "+ Your configuration: #{purple $myconf}"
    
    deb "PS Please find me in " + yellow("#{__FILE__}")
    pazure RemoteTodo.find(10)
    # Your code goes here...
  end

  def main()
    #init
    #lib_autoinit # if u dont like the autoinit, uncomment init :)
    real_program 
  end

  #lib_automain(__FILE__)
  main
